import os, sys

def combine(    output,
                files,
                autogen_header='\n/* FILE AUTO GENERATED BY %s */',
                autogen_define='\n#define PACKAGED',
                file_header='\n\n/* SOURCE FILE: %s */\n\n'):
    
    o = open(output, 'w')
    o.write(autogen_header % (__name__))
    o.write(autogen_define)
    
    for f in files:
        i = open(f, 'r')
        o.write(file_header % (f))
        o.write(i.read())
    
    o.flush()
    o.close()

def parse_funcdefs(file, func_token='FUNCTION'):
    fp = open(file, 'r')
    data = fp.read()
    
    func_defs = []
    idx = 0
    l = len(data)
    
    while idx < l:
        s = data.find(func_token, idx)
        if s < 0:
            break
        
        ss = s
        while ss > 0 and data[ss] != '\n':
            if data[ss] == '#':
                ss = -1
                break
            ss -= 1
        
        if ss < 0:
            idx = s + 1
            continue
        
        e = s
        while True:
            if not e < l:
                e = -1
            if data[e] == ';':
                break
            if data[e] == '{':
                e -= 1
                break
            e += 1
        
        if e > 0:
            func_defs.append(str(data[s:e]))
            idx = e
        else:
            idx = s + 1
    
    return func_defs

def write_funcdef_header( output,
                    files,
                    func_token='FUNCTION',
                    file_header='\n/* FILE AUTO GENERATED BY %s */\n',
                    section_header='\n\n/* SOURCE FILE: %s */\n\n'):
    
    
    filename = os.path.basename(output)
    ifdef_wrap_name = filename.split('.')[0].upper() + '_DOT_H'
    ifdef_wrap = '\n#ifndef %s\n#define %s\n' % (ifdef_wrap_name, ifdef_wrap_name)
    
    o = open(output, 'w')
    o.write(ifdef_wrap)
    o.write(file_header % (__name__))
    
    for f in files:
        func_defs = parse_funcdefs(f, func_token)
        o.write(section_header % (f))
        
        for df in func_defs:
            o.write(df)
            o.write(';')
            o.write('\n')
    
    o.write('\n#endif')
    o.close()
